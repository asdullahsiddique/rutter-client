/**
 *
 * @param {import('../client').RutterClient} client
 */
export default function TokenClient(client) {
  this.client = client;
}

/**
 *
 * @typedef {Object} ExchangeTokenResponse
 * @property {string} access_token
 * @property {string} connection_id
 * @property {boolean} is_ready
 * @property {string} platform
 */

/**
 * @typedef {Object} ExchangeTokenOptions
 * @property {string} public_token - the token generated by rutter link
 */

/**
 *
 * @param {ExchangeTokenOptions} options
 * @returns {ExchangeTokenResponse}
 * @throws {Error}
 * @throws {import("../RutterError").RutterError}
 */
TokenClient.prototype.exchange = async function exchange({ public_token }) {
  const { data } = await this.client.request({
    method: 'post',
    url: '/item/public_token/exchange',
    data: {
      client_id: this.client.configs.clientId,
      secret: this.client.configs.secretId,
      public_token,
    },
  });
  return data;
};
